{"ast":null,"code":"var _jsxFileName = \"/Users/nvharisahan/Downloads/Task-Track/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: 'Shopping',\n    day: 'June 22nd at 2:30pm',\n    remidner: false\n  }, {\n    id: 2,\n    text: 'Workout',\n    day: 'June 23rd at 7pm',\n    remidner: true\n  }, {\n    id: 3,\n    text: 'Movie',\n    day: 'July 21st at 9:30pm',\n    remidner: false\n  }, {\n    id: 4,\n    text: 'Exam',\n    day: 'May 21st at 9am',\n    remidner: false\n  }]); //add task\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  }; //delete task\n\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  }; //toggle reminder\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      showAdd: showAddTask,\n      onAdd: () => setShowAddTask(!showAddTask)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 6\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 22\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onToggle: toggleReminder,\n      onDelete: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 24\n    }, this) : 'No Tasks To Show.']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n} // class App extends React.Component{\n//   render(){\n//     return <h1>Hello from a class.</h1>\n//   }\n// }\n\n\n_s(App, \"nUhi7hkOEXOFnqhjqNb/41FsIVs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nvharisahan/Downloads/Task-Track/src/App.js"],"names":["Header","Tasks","AddTask","useState","App","showAddTask","setShowAddTask","tasks","setTasks","id","text","day","remidner","addTask","task","Math","floor","random","newTask","deleteTask","filter","toggleReminder","map","reminder","length"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,QAAT,QAAwB,OAAxB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCH,QAAQ,CAAE,KAAF,CAA9C;AAEA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAEjC;AACIM,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,GAAG,EAAE,qBAHT;AAIIC,IAAAA,QAAQ,EAAE;AAJd,GAFiC,EAQjC;AACIH,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,SAFV;AAGIC,IAAAA,GAAG,EAAE,kBAHT;AAIIC,IAAAA,QAAQ,EAAE;AAJd,GARiC,EAcjC;AACIH,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,GAAG,EAAE,qBAHT;AAIIC,IAAAA,QAAQ,EAAE;AAJd,GAdiC,EAoBjC;AACIH,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,MAFV;AAGIC,IAAAA,GAAG,EAAE,iBAHT;AAIIC,IAAAA,QAAQ,EAAE;AAJd,GApBiC,CAAD,CAAlC,CAJa,CA+Bf;;AACA,QAAMC,OAAO,GAAIC,IAAD,IAAU;AACxB,UAAML,EAAE,GAAGM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,IAAoC,CAA/C;AACA,UAAMC,OAAO,GAAG;AAACT,MAAAA,EAAD;AAAI,SAAGK;AAAP,KAAhB;AACAN,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAUW,OAAV,CAAD,CAAR;AACD,GAJD,CAhCe,CAsCf;;;AACA,QAAMC,UAAU,GAAIV,EAAD,IAAQ;AACzBD,IAAAA,QAAQ,CAACD,KAAK,CAACa,MAAN,CAAcN,IAAD,IAASA,IAAI,CAACL,EAAL,KAAWA,EAAjC,CAAD,CAAR;AACD,GAFD,CAvCe,CA2Cf;;;AACA,QAAMY,cAAc,GAAIZ,EAAD,IAAQ;AAC7BD,IAAAA,QAAQ,CAACD,KAAK,CAACe,GAAN,CAAWR,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYA,EAAZ,GAC7B,EAAE,GAAGK,IAAL;AAAWS,MAAAA,QAAQ,EAAE,CAACT,IAAI,CAACS;AAA3B,KAD6B,GACUT,IAD9B,CAAD,CAAR;AAED,GAHD;;AAKE,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACC,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAET,WAAjB;AAA8B,MAAA,KAAK,EAAE,MAAMC,cAAc,CAAC,CAACD,WAAF;AAAzD;AAAA;AAAA;AAAA;AAAA,YADD,EAGEA,WAAW,iBAAI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEQ;AAAhB;AAAA;AAAA;AAAA;AAAA,YAHjB,EAMEN,KAAK,CAACiB,MAAN,GAAc,CAAd,gBAAiB,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEjB,KAAd;AAAqB,MAAA,QAAQ,EAAEc,cAA/B;AAClB,MAAA,QAAQ,EAAEF;AADQ;AAAA;AAAA;AAAA;AAAA,YAAjB,GAGA,mBATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,C,CAGD;AACA;AACA;AACA;AACA;;;GAxESf,G;;KAAAA,G;AA4ET,eAAeA,GAAf","sourcesContent":["import Header from \"./components/Header\"\nimport Tasks from \"./components/Tasks\"\nimport AddTask from \"./components/AddTask\"\nimport { useState} from 'react'\n\nfunction App() {\n\n  const [showAddTask, setShowAddTask] = useState (false)   \n\n  const [tasks, setTasks] = useState([\n   \n    {\n        id: 1,\n        text: 'Shopping',\n        day: 'June 22nd at 2:30pm',\n        remidner: false,\n    },\n    {\n        id: 2,\n        text: 'Workout',\n        day: 'June 23rd at 7pm',\n        remidner: true,\n    },\n    {\n        id: 3,\n        text: 'Movie',\n        day: 'July 21st at 9:30pm',\n        remidner: false,\n    },\n    {\n        id: 4,\n        text: 'Exam',\n        day: 'May 21st at 9am',\n        remidner: false,\n    }\n])\n//add task\nconst addTask = (task) => {\n  const id = Math.floor(Math.random() * 10000 )+ 1;\n  const newTask = {id,...task}\n  setTasks([...tasks,newTask])\n}\n\n//delete task\nconst deleteTask = (id) => {\n  setTasks(tasks.filter((task)=> task.id!== id))\n}\n\n//toggle reminder\nconst toggleReminder = (id) => {\n  setTasks(tasks.map((task) => task.id === id ? \n  { ...task, reminder: !task.reminder} : task))\n}\n\n  return (\n    <div className=\"container\">\n     <Header showAdd={showAddTask} onAdd={() => setShowAddTask(!showAddTask)} />\n\n     {showAddTask && <AddTask onAdd={addTask} />}\n\n\n     {tasks.length >0 ?<Tasks tasks={tasks} onToggle={toggleReminder} \n     onDelete={deleteTask} /> \n     :\n      'No Tasks To Show.'}\n  \n    </div>\n  \n\n  );\n}\n\n\n// class App extends React.Component{\n//   render(){\n//     return <h1>Hello from a class.</h1>\n//   }\n// }\n\n\n\nexport default App; \n"]},"metadata":{},"sourceType":"module"}